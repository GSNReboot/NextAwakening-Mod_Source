script.reload("player/common.lua")
function SetupModuleSub(_ARG_0_)
  OpenGameMaster(_ARG_0_, gamemaster_module_player)
  OpenLockOn(_ARG_0_, "lockon", stepable_inter)
  OpenOther(_ARG_0_, other_module_sonic_homing)
  OpenLockOn(_ARG_0_, "lockon_homing", stepable_pre)
  OpenLightDash(_ARG_0_)
  OpenLockOn(_ARG_0_, "lockon_lightdash", stepable_inter)
  OpenEffect(_ARG_0_, effect_module_sonic, "player_sonic")
  OpenSound(_ARG_0_, sound_module_sonic, "player_sonic")
  OpenGauge(_ARG_0_, gauge_module_sonic)
  OpenWeapons(_ARG_0_, other_module_sonic_weapons)
  OpenKynapse(_ARG_0_, "Player", "PlayerBot")
  OpenLockOn(_ARG_0_, "lockon_chase", stepable_pre)
  OpenInput(_ARG_0_, input_system_vehicle)
  OpenOther(_ARG_0_, other_module_rodeo)
  OpenOther(_ARG_0_, other_module_amigo_change)
  OpenOther(_ARG_0_, other_module_talk)
  OpenOther(_ARG_0_, other_module_waterslider)
  OpenOther(_ARG_0_, other_module_item)
  OpenAI(_ARG_0_, ai_module_amigo)
  OpenLockOn(_ARG_0_, "lockon_chase", stepable_pre)
end
function SetupModuleDebugSub(_ARG_0_)
c_lockon_chase = {
  type = shape_convex_box,
  near_x = 5 * meter,
  near_y = 6 * meter,
  z = 13 * meter,
  far_x = 15 * meter,
  far_y = 13 * meter,
  sort = lockon_sort_priority_and_distance,
  lockon = lockon_type_chase
}
end
c_player_name = "sonic"
debug = not_use
c_module_state = state_module_sonic
c_module_model = model_module_sonic_new
c_system_model = model_system_sonic
c_posture_control = posture_control_normal
c_input_system = input_system_normal
c_module_gravity = use
c_model_package = "player/sonic_new"
c_module_impulse = impulse_module_standard
c_has_custom_action = use
c_item_table = {
  {
    flags = equip_boundjump,
    package = c_model_package,
    model = "bbungle_L",
    node = "Left_ItemPoint"
  }, 
  {
    flags = equip_homingsmash,
    package = c_model_package,
    model = "sbungle_R",
    node = "Right_ItemPoint"
  }
}
c_hair = {
  "TopHair",
  "HighLeftHair",
  "HighRightHair",
  "LowLeftHair",
  "LowRightHair",
  "MiddleHair"
}

script.reload("player/sonic_new/gauge-state.lua", "player/sonic_new/gauge-call.lua")

c_input_border = 0.1
c_dclick_time = 0.16 * sec
c_lclick_time = 0.16 * sec
script.reload("player/collision_standard.lua")
c_lockon = {
  type = shape_convex_box,
  near_x = 5 * meter,
  near_y = 50 * meter,
  z = 300 * meter,
  far_x = 10 * meter,
  far_y = 300 * meter,
  sort = lockon_sort_priority_and_distance,
  lockon = lockon_type_lockon
}

c_thunderguard_collision = {
  type = shape_sphere,
  radius = 2 * meter,
  offset = {
    x = 0 * meter,
    y = -2 * meter,
    z = 0 * meter
  }
}
c_tornado_power = 800 * N
c_tornado_damage = 2 * point
c_tornado_collision = {
  type = shape_cylinder,
  radius = 6 * meter,
  height = 5 * meter
}
c_rotation_method = input_method_sonic_v1
c_rotation_speed = 8 * (meter / sec)
c_weight = 20 * kg
c_slope_rad = 30 * deg
c_slope_rad_b = 10 * deg
c_downforce = 0.6 * meter
c_interp_gravity = 0.5
c_brake_acc = 40 * meter
c_walk_border = 0.1
c_run_border = 0.6
c_walk_speed_max = 3 * (meter / sec)
c_run_speed_max = 20 * (meter / sec)
c_jump_time_min = 0.1 * sec
c_jump_brake = 25 * (meter / sec)
c_jump_speed_acc = 20 * meter
c_jump_speed_brake = 20 * meter
l_run_acc = 2 * sec
l_jump_hight = 4 * meter
l_jump_walk = 8 * meter
l_jump_run = 16 * meter
c_brake_quick_acc = 30 * meter
c_wait_no_input_time = 15 * sec
c_damage_time = 0.8 * sec
c_damage_jump = 2 * (meter / sec)
c_damage_speed = -1 * (meter / sec)
c_run_against_time = 1 * sec
c_grind_speed_org = 23 * (meter / sec)
c_grind_acc = 15 * meter
c_grind_speed_max = 40 * meter
c_grind_time = 0.3 * sec
c_grind_penalty_time = 0.8 * sec
c_grind_brake_acc = 2 * meter
c_brake_dashpanel = 10 * meter
c_speedup_speed_max = 25 * (meter / sec)
l_speedup_acc = 0.5 * sec
c_run_acc = (c_run_speed_max - c_walk_speed_max) / l_run_acc
c_jump_speed = 9 * (meter / sec)
c_jump_walk = HeightAndDistanceToSpeed(l_jump_walk, l_jump_hight)
c_jump_run = 9 * (meter / sec)
c_speedup_acc = (c_speedup_speed_max - c_walk_speed_max) / l_speedup_acc
c_brake_acc_sand = c_brake_acc * 2
c_run_acc_sand = c_run_acc * 0.5
c_jump_speed_sand = SpeedByHeightBias(c_jump_speed, 0.5)

script.reload("player/sonic_new/homing-state.lua")
script.reload("player/sonic_new/homing-call.lua")
script.reload("player/sonic_new/antigrav-state.lua")
script.reload("player/sonic_new/antigrav-call.lua")
script.reload("player/sonic_new/spindash-state.lua")
script.reload("player/sonic_new/bound-state.lua")
script.reload("player/sonic_new/bound-call.lua")
script.reload("player/sonic_new/walljump-state.lua")
script.reload("player/sonic_new/lightdash-state.lua")
script.reload("player/sonic_new/lightdash-call.lua")
script.reload("player/sonic_new/attack-state.lua")
c_custom_action_slow_bias = 2
c_custom_action_slow_time = -8
c_custom_action_machspeed_acc = 4500
c_custom_action_machspeed_time = 0.2
c_custom_action_scale = 0.1
c_scale_run_speed_max = 1.2 * c_run_speed_max
c_scale_run_acc = 1.2 * c_run_acc
c_scale_walk_speed_max = 1.2 * c_walk_speed_max
c_scale_jump_speed = 0.5 * c_jump_speed
c_scale_jump_block = 0.5 * sec
